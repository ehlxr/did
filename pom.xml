<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.ceres.did</groupId>
    <artifactId>did</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>did-server</module>
        <module>did-sdk</module>
        <module>did-common</module>
    </modules>

    <name>did</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--目标编译的 Java 版本可以通过以下属性指定，不用配置 maven-compiler-plugin 插件-->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <netty.version>4.1.58.Final</netty.version>
        <logback.version>1.1.7</logback.version>
        <junit.version>4.13.1</junit.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <!--<configuration>-->
                    <!--    <altDeploymentRepository>maven.repo::default::file://${project.build.directory}/mvn-repo-->
                    <!--    </altDeploymentRepository>-->
                    <!--</configuration>-->
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.1.0</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--<plugin>-->
                <!--    &lt;!&ndash; Deploy the web site &ndash;&gt;-->
                <!--    <groupId>com.github.github</groupId>-->
                <!--    <artifactId>site-maven-plugin</artifactId>-->
                <!--    <version>0.12</version>-->
                <!--    <executions>-->
                <!--        <execution>-->
                <!--            <goals>-->
                <!--                <goal>site</goal>-->
                <!--            </goals>-->
                <!--            &lt;!&ndash; select the Maven phase in which the plugin will be executed &ndash;&gt;-->
                <!--            <phase>deploy</phase>-->
                <!--            <configuration>-->
                <!--                &lt;!&ndash; Plugin configuration goes here &ndash;&gt;-->
                <!--                <server>github</server>-->
                <!--                &lt;!&ndash; The commit message &ndash;&gt;-->
                <!--                <message>init git maven repository</message>-->
                <!--                &lt;!&ndash; The location where the site is uploaded &ndash;&gt;-->
                <!--                <repositoryName>mvn-repository</repositoryName> &lt;!&ndash; github repo name &ndash;&gt;-->
                <!--                <repositoryOwner>ehlxr</repositoryOwner> &lt;!&ndash; organization or user name  &ndash;&gt;-->
                <!--                &lt;!&ndash; Use merge or override the content &ndash;&gt;-->
                <!--                <merge>true</merge>-->
                <!--                <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>-->
                <!--                <branch>refs/heads/mvn-repo</branch>-->
                <!--                &lt;!&ndash;<includes>&ndash;&gt;-->
                <!--                &lt;!&ndash;    <include>**/*</include>&ndash;&gt;-->
                <!--                &lt;!&ndash;</includes>&ndash;&gt;-->
                <!--            </configuration>-->
                <!--        </execution>-->
                <!--    </executions>-->
                <!--</plugin>-->
            </plugins>
        </pluginManagement>
    </build>

    <!--<distributionManagement>-->
    <!--    <repository>-->
    <!--        <id>maven.repo</id>-->
    <!--        <name>Local Staging Repository</name>-->
    <!--        <url>file://${project.build.directory}/mvn-repo</url>-->
    <!--    </repository>-->
    <!--</distributionManagement>-->

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/ehlxr/mvn-repository</url>
        </repository>
    </distributionManagement>

</project>
